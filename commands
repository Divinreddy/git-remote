pwd
git status
mate README.md
git status
git add README.md
git status
git commit -m "Adding some ipsum"
clear
git status
mate README.md
git status
git commit -am "Adding more ipsum"
git status

git log
git help log
git log --oneline --graph --decorate --color
pwd
git status
mate debug.log
ls
git status
git add .
git status
git commit -m "adding log file that really does not belong here"
clear
git status
git rm debug.log
ls
git status
git commit -m "removing log file"
clear
mate info.log
ls
git add info.log
git commit -m "adding info log"
git status
clear
ls
rm info.log
ls
git status
git add .
git add -u
clear
git status
git commit -m "Removing info.log"
ls
mkdir web
ls
git mv index.html web
cd web/
ll
pwd
cd ..
ls
git status
git commit -m "Moving index.html file to web folder"
clear
 

Lecture Command Listing -- Ignoring Files
mate application.log
ls
git status
mate .iitignore
git status
ls -a
git add .gitignore
clear
git status
git commit -m "adding ignore file"
 

Command Reference
Seeing Repository History

git log
git log --oneline --graph --decorate --color
Git's log command displays the repository's history in reverse chronological order. The no-params version displays the standard view.

Git log options from above: --oneline Compacts log data on to one line, abbreviating the SHA1 hash --graph Adds asterisk marks and pipes next to each commit to show the branching graph lines --decorate Adds the markers for branch names and tags next to corresponding commits --color Adds some color to the output -- nice to have, depending on the operating system
Removing a file using Git

git rm file-name
Removing a file using Terminal

rm file-name
This removes the file outside Git's knowledge

Updating Git's Index (staging area)

git add -u
The -u parameter will recursively update Git's staging area regarding deleted/moved files outside of Git.

Making a directory (folder)

mkdir folder-name
The mkdir command is a nearly universal command for creating a directory/folder.

Making a directory (folder)

git mv source destination
The git mv command will move the source (file or folder) to the destination with Git.

 
cd ~
cd .ssh
mkdir .ssh
cd .ssh
pwd
ssh-keygen -t rsa -C "jason@jasongtaylor.com"
mate id_rsa.pub
ssh -T git@github.com

ssh -T git@github.com
ssh-keygen -t rsa -C "your.name@your-company.com"

echo "# git-remote" >> README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin git@github.com:gangireddydanam/git-remote.git
git push -u origin master

git remote add origin git@github.com:gangireddydanam/git-remote.git
git push -u origin master

git remote -v

git status
git remote add origin git@github.com:scm-ninja/git-demo.git
git remote -v
git push -u origin master
git push origin master
ls
cd web/
mate index.html
clear
git commit -am "Updating index page for GH"
git status
git pull origin master
git push origin master

$ git remote add new-remote-repo https://bitbucket.com/user/repo.git

 git remote add test git@github.com:gangireddydanam/git-remote.git

 git checkout -b <branch-name>
 git push origin testing


 git fetch
git checkout origin/your_branch
git push -u origin your_branch



If you want to create a branch from the current branch

git checkout -b {your_local_branch_name} 
you want a branch from a remote branch, you can try

git checkout -b {your_local_branch_name} origin/<remote_branch_name>
If you are done with changes you can add the file.

git add -A or git add <each_file_names>
Then do a commit locally

git commit -m 'your commit message'
When you want to push to remote repo

git push -u origin <your_local_branch_name>
All together will be

git checkout -b bug_fixes

git checkout testing

git log --oneline --decorate --graph --all

https://git-scm.com/book/en/v2/Git-Branching-Basic-Branching-and-Merging




